{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","console","log","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"2MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAiB9C,OAEI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAOlB,SACA,uBAAOO,KAAO,OACdC,MAAUT,EACVU,SAnBsB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QARvB,kBAaZM,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAmB,IAAjBH,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAEjC,OADAc,QAAQC,IAAIL,EAAMV,GAEd,sBAAKgB,UAAU,gDAAf,UACG,qBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,4BAAIA,QCFFS,EAAU,SAAC,GAAiB,IAAhBrB,EAAe,EAAfA,UAAe,ECFZ,SAACA,GAAe,IAAD,EACbd,mBAAS,CAC/BqB,KAAM,GACNe,SAAS,IAH0B,mBAChCC,EADgC,KACzBC,EADyB,KAqBvC,OAbAC,qBAAU,WACP1B,EAAQC,GACP0B,MAAM,SAAAC,GAENH,EAAS,CACLjB,KAAMoB,EACHL,SAAS,SAKlB,CAACtB,IAEIuB,EDjBiBK,CAAa5B,GAA9BO,EAF6B,EAE7BA,KAAMe,EAFuB,EAEvBA,QAEb,OACI,qCACA,oBAAIJ,UAAU,oCAAd,SAAmDlB,IAClDsB,GAAW,mBAAGJ,UAAU,mCAAb,wBACZ,qBAAKA,UAAU,YAAf,SAIQX,EAAKE,KAAI,SAAAC,GAAG,OACR,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEdhBkB,EAAe,WAAO,IAAD,EAGM3C,mBAAS,CAAC,cAHhB,mBAGvB4C,EAHuB,KAGX7C,EAHW,KAK9B,OAAS,qCAEL,gDACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,uBAEA,mCACI6C,EAAWrB,KAAI,SAAAT,GAAS,OACpB,cACA,EADA,CAEAA,UAAcA,GADEA,MAHxB,WCPR+B,IAASC,OAEL,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.62cee045.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategorias }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategorias(cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <form onSubmit = { handleSubmit } >\r\n        <input type = \"text\"\r\n        value = { inputValue }\r\n        onChange = { handleInputChange }\r\n\r\n        /> \r\n        </form>\r\n\r\n\r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    setCategorias: PropTypes.func.isRequired\r\n}","export const getGifs = async(categoria) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria)}&limit=10&api_key=XIWMLUskdFmwF9W3qfxT7nK0mgLVYGp7`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n\r\n    })\r\n\r\n    return gifs;\r\n\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ title, url}) => {\r\n    console.log(title,url)\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInDownBig\">\r\n           <img src={url} alt={title}/>\r\n           <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\n\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({categoria}) => {\r\n\r\n    const {data, loading} = useFetchGifs(categoria);\r\n   \r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{categoria}</h3>\r\n        {loading && <p className=\"animate__animated animate__flash\">Cargando..</p>}\r\n        <div className=\"card-grid\">\r\n            \r\n            \r\n            {\r\n                data.map(img =>(\r\n                    <GifGridItem \r\n                    key={img.id}\r\n                    {...img}\r\n                    />\r\n\r\n                ))\r\n            }\r\n           \r\n           \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import {useState, useEffect} from 'react'\r\nimport { getGifs } from '../helpers/getGifs'\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    })\r\n\r\n  \r\n       //useEffect sirve para no disparar a cada rato el fetch\r\n    useEffect(()=>{\r\n       getGifs(categoria)\r\n       .then( imgs =>{\r\n         \r\n        setState({\r\n            data: imgs,\r\n               loading: false\r\n        })\r\n    \r\n           \r\n       })\r\n    },[categoria])\r\n\r\n    return state;\r\n}\r\n","import React, { Fragment, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\r\n    const [categorias, setCategorias] = useState(['One Punch'])\r\n\r\n    return ( <>\r\n\r\n        <h2 > GifExpertApp </h2> \r\n        <AddCategory setCategorias = { setCategorias }/> \r\n        <hr />\r\n\r\n        <ol > {\r\n            categorias.map(categoria =>\r\n                <\r\n                GifGrid key = { categoria }\r\n                categoria = { categoria }\r\n                />\r\n\r\n            )\r\n        } </ol> \r\n        </>\r\n\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import reportWebVitals from './reportWebVitals';\nimport {GifExpertApp} from './GifExpertApp'\n\n\n\n\nReactDOM.render(\n    //<React.StrictMode>\n    <GifExpertApp /> ,\n    //</React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();"],"sourceRoot":""}